import {
    Bytes,
} from "@graphprotocol/graph-ts";


// Action  (borrow, repay) Proxy	0x411B81B4aFb4Eca8f3C57fF8C4C17c5b872D1810
// Action  (borrow, repay) Impl	0x2e321d5DFa90236A51C43958BF3851F7e6a4B399
// Function: borrow(address uToken,uint256 amount,tuple[] assets,tuple signAction,tuple sig) ***
// MethodID: 0xc94b31a6


const transactionInput = "0xc94b31a600000000000000000000000000000000000000000000000000005af3107a4000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000001a0000000000000000000000000000000000000000000000000000000000000001bd0a278112a08b922ec87cc656064f7606f37db049de3bda9b4fb8b1ce9f2bd8b4b662d084c0b909f95c1023818b7422556d081bffa77e90ea7b4b4f991be14150000000000000000000000000000000000000000000000000000018434252e5100000000000000000000000000000000000000000000000000000000000000020000000000000000000000004ac593920d734be24250cb0bfac39df621c6e63600000000000000000000000000000000000000000000000000000000000000330000000000000000000000004ac593920d734be24250cb0bfac39df621c6e636000000000000000000000000000000000000000000000000000000000000034000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ad78ebc5ac62000000000000000000000000000000000000000000000000000000000000000000bb80000000000000000000000000000000000000000000000000000000000002134000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000018434252e51000000000000000000000000000000000000000000000000000000000000014000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000018434252e510000000000000000000000000000000000000000000000000000000000000002fcb5a36a4bdfff4713b4bc5f294cbad23e4f2c92c07e9eeec58b94e0effaa160c0796bbc61197497c781be988d903ef65c754e50e79fda34f9d875e7d970d7ba"

const inputDataHexString = transactionInput.slice(10); //take away function signature: '0x????????'
const hexStringToDecode = '0x0000000000000000000000000000000000000000000000000000000000000020' + inputDataHexString; // prepend tuple offset
console.log(Bytes.fromByteArray(Bytes.fromHexString(hexStringToDecode)).toString());