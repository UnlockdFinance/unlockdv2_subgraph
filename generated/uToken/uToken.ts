// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class Approval extends ethereum.Event {
  get params(): Approval__Params {
    return new Approval__Params(this);
  }
}

export class Approval__Params {
  _event: Approval;

  constructor(event: Approval) {
    this._event = event;
  }

  get owner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get spender(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get value(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class BalanceTransfer extends ethereum.Event {
  get params(): BalanceTransfer__Params {
    return new BalanceTransfer__Params(this);
  }
}

export class BalanceTransfer__Params {
  _event: BalanceTransfer;

  constructor(event: BalanceTransfer) {
    this._event = event;
  }

  get from(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get to(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get value(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get index(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class BorrowOnBelhalf extends ethereum.Event {
  get params(): BorrowOnBelhalf__Params {
    return new BorrowOnBelhalf__Params(this);
  }
}

export class BorrowOnBelhalf__Params {
  _event: BorrowOnBelhalf;

  constructor(event: BorrowOnBelhalf) {
    this._event = event;
  }

  get onBehalfOf(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get iniciator(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get loanId(): Bytes {
    return this._event.parameters[3].value.toBytes();
  }

  get underlyingAsset(): Address {
    return this._event.parameters[4].value.toAddress();
  }

  get borrowRate(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }
}

export class Burn extends ethereum.Event {
  get params(): Burn__Params {
    return new Burn__Params(this);
  }
}

export class Burn__Params {
  _event: Burn;

  constructor(event: Burn) {
    this._event = event;
  }

  get from(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get target(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get value(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get index(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class Deposit extends ethereum.Event {
  get params(): Deposit__Params {
    return new Deposit__Params(this);
  }
}

export class Deposit__Params {
  _event: Deposit;

  constructor(event: Deposit) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get reserve(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get onBehalfOf(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get referral(): i32 {
    return this._event.parameters[4].value.toI32();
  }
}

export class Initialized extends ethereum.Event {
  get params(): Initialized__Params {
    return new Initialized__Params(this);
  }
}

export class Initialized__Params {
  _event: Initialized;

  constructor(event: Initialized) {
    this._event = event;
  }

  get version(): i32 {
    return this._event.parameters[0].value.toI32();
  }
}

export class Initialized1 extends ethereum.Event {
  get params(): Initialized1__Params {
    return new Initialized1__Params(this);
  }
}

export class Initialized1__Params {
  _event: Initialized1;

  constructor(event: Initialized1) {
    this._event = event;
  }

  get underlyingAsset(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get interestRate(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get treasury(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class Mint extends ethereum.Event {
  get params(): Mint__Params {
    return new Mint__Params(this);
  }
}

export class Mint__Params {
  _event: Mint;

  constructor(event: Mint) {
    this._event = event;
  }

  get from(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get value(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get index(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class Paused extends ethereum.Event {
  get params(): Paused__Params {
    return new Paused__Params(this);
  }
}

export class Paused__Params {
  _event: Paused;

  constructor(event: Paused) {
    this._event = event;
  }
}

export class PausedTimeUpdated extends ethereum.Event {
  get params(): PausedTimeUpdated__Params {
    return new PausedTimeUpdated__Params(this);
  }
}

export class PausedTimeUpdated__Params {
  _event: PausedTimeUpdated;

  constructor(event: PausedTimeUpdated) {
    this._event = event;
  }

  get startTime(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get durationTime(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class RepayOnBelhalf extends ethereum.Event {
  get params(): RepayOnBelhalf__Params {
    return new RepayOnBelhalf__Params(this);
  }
}

export class RepayOnBelhalf__Params {
  _event: RepayOnBelhalf;

  constructor(event: RepayOnBelhalf) {
    this._event = event;
  }

  get iniciator(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get loanId(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get underlyingAsset(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get onBehalfOf(): Address {
    return this._event.parameters[4].value.toAddress();
  }

  get borrowRate(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }
}

export class ReserveDataUpdated extends ethereum.Event {
  get params(): ReserveDataUpdated__Params {
    return new ReserveDataUpdated__Params(this);
  }
}

export class ReserveDataUpdated__Params {
  _event: ReserveDataUpdated;

  constructor(event: ReserveDataUpdated) {
    this._event = event;
  }

  get reserve(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get liquidityRate(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get variableBorrowRate(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get liquidityIndex(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get variableBorrowIndex(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class Transfer extends ethereum.Event {
  get params(): Transfer__Params {
    return new Transfer__Params(this);
  }
}

export class Transfer__Params {
  _event: Transfer;

  constructor(event: Transfer) {
    this._event = event;
  }

  get from(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get to(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get value(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class TreasuryAddressUpdated extends ethereum.Event {
  get params(): TreasuryAddressUpdated__Params {
    return new TreasuryAddressUpdated__Params(this);
  }
}

export class TreasuryAddressUpdated__Params {
  _event: TreasuryAddressUpdated;

  constructor(event: TreasuryAddressUpdated) {
    this._event = event;
  }

  get _newTreasuryAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class UTokenSwept extends ethereum.Event {
  get params(): UTokenSwept__Params {
    return new UTokenSwept__Params(this);
  }
}

export class UTokenSwept__Params {
  _event: UTokenSwept;

  constructor(event: UTokenSwept) {
    this._event = event;
  }

  get uToken(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get underlyingAsset(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class Unpaused extends ethereum.Event {
  get params(): Unpaused__Params {
    return new Unpaused__Params(this);
  }
}

export class Unpaused__Params {
  _event: Unpaused;

  constructor(event: Unpaused) {
    this._event = event;
  }
}

export class Withdraw extends ethereum.Event {
  get params(): Withdraw__Params {
    return new Withdraw__Params(this);
  }
}

export class Withdraw__Params {
  _event: Withdraw;

  constructor(event: Withdraw) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get reserve(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get to(): Address {
    return this._event.parameters[3].value.toAddress();
  }
}

export class uToken__getReserveResultValue0Struct extends ethereum.Tuple {
  get uToken(): Address {
    return this[0].toAddress();
  }

  get liquidityIndex(): BigInt {
    return this[1].toBigInt();
  }

  get variableBorrowIndex(): BigInt {
    return this[2].toBigInt();
  }

  get currentLiquidityRate(): BigInt {
    return this[3].toBigInt();
  }

  get currentVariableBorrowRate(): BigInt {
    return this[4].toBigInt();
  }

  get lastUpdateTimestamp(): BigInt {
    return this[5].toBigInt();
  }

  get debtTokenAddress(): Address {
    return this[6].toAddress();
  }

  get underlyingAsset(): Address {
    return this[7].toAddress();
  }

  get interestRateAddress(): Address {
    return this[8].toAddress();
  }

  get decimals(): i32 {
    return this[9].toI32();
  }

  get reserveFactor(): BigInt {
    return this[10].toBigInt();
  }
}

export class uToken extends ethereum.SmartContract {
  static bind(address: Address): uToken {
    return new uToken("uToken", address);
  }

  RESERVE_TREASURY_ADDRESS(): Address {
    let result = super.call(
      "RESERVE_TREASURY_ADDRESS",
      "RESERVE_TREASURY_ADDRESS():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_RESERVE_TREASURY_ADDRESS(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "RESERVE_TREASURY_ADDRESS",
      "RESERVE_TREASURY_ADDRESS():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  UNDERLYING_ASSET_ADDRESS(): Address {
    let result = super.call(
      "UNDERLYING_ASSET_ADDRESS",
      "UNDERLYING_ASSET_ADDRESS():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_UNDERLYING_ASSET_ADDRESS(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "UNDERLYING_ASSET_ADDRESS",
      "UNDERLYING_ASSET_ADDRESS():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  allowance(owner: Address, spender: Address): BigInt {
    let result = super.call(
      "allowance",
      "allowance(address,address):(uint256)",
      [ethereum.Value.fromAddress(owner), ethereum.Value.fromAddress(spender)]
    );

    return result[0].toBigInt();
  }

  try_allowance(owner: Address, spender: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "allowance",
      "allowance(address,address):(uint256)",
      [ethereum.Value.fromAddress(owner), ethereum.Value.fromAddress(spender)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  approve(spender: Address, amount: BigInt): boolean {
    let result = super.call("approve", "approve(address,uint256):(bool)", [
      ethereum.Value.fromAddress(spender),
      ethereum.Value.fromUnsignedBigInt(amount)
    ]);

    return result[0].toBoolean();
  }

  try_approve(spender: Address, amount: BigInt): ethereum.CallResult<boolean> {
    let result = super.tryCall("approve", "approve(address,uint256):(bool)", [
      ethereum.Value.fromAddress(spender),
      ethereum.Value.fromUnsignedBigInt(amount)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  balanceOf(user: Address): BigInt {
    let result = super.call("balanceOf", "balanceOf(address):(uint256)", [
      ethereum.Value.fromAddress(user)
    ]);

    return result[0].toBigInt();
  }

  try_balanceOf(user: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall("balanceOf", "balanceOf(address):(uint256)", [
      ethereum.Value.fromAddress(user)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  decimals(): i32 {
    let result = super.call("decimals", "decimals():(uint8)", []);

    return result[0].toI32();
  }

  try_decimals(): ethereum.CallResult<i32> {
    let result = super.tryCall("decimals", "decimals():(uint8)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  decreaseAllowance(spender: Address, subtractedValue: BigInt): boolean {
    let result = super.call(
      "decreaseAllowance",
      "decreaseAllowance(address,uint256):(bool)",
      [
        ethereum.Value.fromAddress(spender),
        ethereum.Value.fromUnsignedBigInt(subtractedValue)
      ]
    );

    return result[0].toBoolean();
  }

  try_decreaseAllowance(
    spender: Address,
    subtractedValue: BigInt
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "decreaseAllowance",
      "decreaseAllowance(address,uint256):(bool)",
      [
        ethereum.Value.fromAddress(spender),
        ethereum.Value.fromUnsignedBigInt(subtractedValue)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  getDebtToken(): Address {
    let result = super.call("getDebtToken", "getDebtToken():(address)", []);

    return result[0].toAddress();
  }

  try_getDebtToken(): ethereum.CallResult<Address> {
    let result = super.tryCall("getDebtToken", "getDebtToken():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getReserve(): uToken__getReserveResultValue0Struct {
    let result = super.call(
      "getReserve",
      "getReserve():((address,uint128,uint128,uint128,uint128,uint40,address,address,address,uint8,uint256))",
      []
    );

    return changetype<uToken__getReserveResultValue0Struct>(
      result[0].toTuple()
    );
  }

  try_getReserve(): ethereum.CallResult<uToken__getReserveResultValue0Struct> {
    let result = super.tryCall(
      "getReserve",
      "getReserve():((address,uint128,uint128,uint128,uint128,uint40,address,address,address,uint8,uint256))",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<uToken__getReserveResultValue0Struct>(value[0].toTuple())
    );
  }

  getReserveNormalizedVariableDebt(): BigInt {
    let result = super.call(
      "getReserveNormalizedVariableDebt",
      "getReserveNormalizedVariableDebt():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_getReserveNormalizedVariableDebt(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getReserveNormalizedVariableDebt",
      "getReserveNormalizedVariableDebt():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  increaseAllowance(spender: Address, addedValue: BigInt): boolean {
    let result = super.call(
      "increaseAllowance",
      "increaseAllowance(address,uint256):(bool)",
      [
        ethereum.Value.fromAddress(spender),
        ethereum.Value.fromUnsignedBigInt(addedValue)
      ]
    );

    return result[0].toBoolean();
  }

  try_increaseAllowance(
    spender: Address,
    addedValue: BigInt
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "increaseAllowance",
      "increaseAllowance(address,uint256):(bool)",
      [
        ethereum.Value.fromAddress(spender),
        ethereum.Value.fromUnsignedBigInt(addedValue)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  name(): string {
    let result = super.call("name", "name():(string)", []);

    return result[0].toString();
  }

  try_name(): ethereum.CallResult<string> {
    let result = super.tryCall("name", "name():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  scaledBalanceOf(user: Address): BigInt {
    let result = super.call(
      "scaledBalanceOf",
      "scaledBalanceOf(address):(uint256)",
      [ethereum.Value.fromAddress(user)]
    );

    return result[0].toBigInt();
  }

  try_scaledBalanceOf(user: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "scaledBalanceOf",
      "scaledBalanceOf(address):(uint256)",
      [ethereum.Value.fromAddress(user)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  scaledTotalSupply(): BigInt {
    let result = super.call(
      "scaledTotalSupply",
      "scaledTotalSupply():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_scaledTotalSupply(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "scaledTotalSupply",
      "scaledTotalSupply():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  symbol(): string {
    let result = super.call("symbol", "symbol():(string)", []);

    return result[0].toString();
  }

  try_symbol(): ethereum.CallResult<string> {
    let result = super.tryCall("symbol", "symbol():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  totalSupply(): BigInt {
    let result = super.call("totalSupply", "totalSupply():(uint256)", []);

    return result[0].toBigInt();
  }

  try_totalSupply(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("totalSupply", "totalSupply():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  transfer(to: Address, amount: BigInt): boolean {
    let result = super.call("transfer", "transfer(address,uint256):(bool)", [
      ethereum.Value.fromAddress(to),
      ethereum.Value.fromUnsignedBigInt(amount)
    ]);

    return result[0].toBoolean();
  }

  try_transfer(to: Address, amount: BigInt): ethereum.CallResult<boolean> {
    let result = super.tryCall("transfer", "transfer(address,uint256):(bool)", [
      ethereum.Value.fromAddress(to),
      ethereum.Value.fromUnsignedBigInt(amount)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  transferFrom(from: Address, to: Address, amount: BigInt): boolean {
    let result = super.call(
      "transferFrom",
      "transferFrom(address,address,uint256):(bool)",
      [
        ethereum.Value.fromAddress(from),
        ethereum.Value.fromAddress(to),
        ethereum.Value.fromUnsignedBigInt(amount)
      ]
    );

    return result[0].toBoolean();
  }

  try_transferFrom(
    from: Address,
    to: Address,
    amount: BigInt
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "transferFrom",
      "transferFrom(address,address,uint256):(bool)",
      [
        ethereum.Value.fromAddress(from),
        ethereum.Value.fromAddress(to),
        ethereum.Value.fromUnsignedBigInt(amount)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  withdraw(amount: BigInt, to: Address): BigInt {
    let result = super.call("withdraw", "withdraw(uint256,address):(uint256)", [
      ethereum.Value.fromUnsignedBigInt(amount),
      ethereum.Value.fromAddress(to)
    ]);

    return result[0].toBigInt();
  }

  try_withdraw(amount: BigInt, to: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "withdraw",
      "withdraw(uint256,address):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(amount),
        ethereum.Value.fromAddress(to)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }
}

export class ApproveCall extends ethereum.Call {
  get inputs(): ApproveCall__Inputs {
    return new ApproveCall__Inputs(this);
  }

  get outputs(): ApproveCall__Outputs {
    return new ApproveCall__Outputs(this);
  }
}

export class ApproveCall__Inputs {
  _call: ApproveCall;

  constructor(call: ApproveCall) {
    this._call = call;
  }

  get spender(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class ApproveCall__Outputs {
  _call: ApproveCall;

  constructor(call: ApproveCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class BorrowOnBelhalfCall extends ethereum.Call {
  get inputs(): BorrowOnBelhalfCall__Inputs {
    return new BorrowOnBelhalfCall__Inputs(this);
  }

  get outputs(): BorrowOnBelhalfCall__Outputs {
    return new BorrowOnBelhalfCall__Outputs(this);
  }
}

export class BorrowOnBelhalfCall__Inputs {
  _call: BorrowOnBelhalfCall;

  constructor(call: BorrowOnBelhalfCall) {
    this._call = call;
  }

  get loanId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get to(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get onBehalfOf(): Address {
    return this._call.inputValues[3].value.toAddress();
  }
}

export class BorrowOnBelhalfCall__Outputs {
  _call: BorrowOnBelhalfCall;

  constructor(call: BorrowOnBelhalfCall) {
    this._call = call;
  }
}

export class DecreaseAllowanceCall extends ethereum.Call {
  get inputs(): DecreaseAllowanceCall__Inputs {
    return new DecreaseAllowanceCall__Inputs(this);
  }

  get outputs(): DecreaseAllowanceCall__Outputs {
    return new DecreaseAllowanceCall__Outputs(this);
  }
}

export class DecreaseAllowanceCall__Inputs {
  _call: DecreaseAllowanceCall;

  constructor(call: DecreaseAllowanceCall) {
    this._call = call;
  }

  get spender(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get subtractedValue(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class DecreaseAllowanceCall__Outputs {
  _call: DecreaseAllowanceCall;

  constructor(call: DecreaseAllowanceCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class DepositCall extends ethereum.Call {
  get inputs(): DepositCall__Inputs {
    return new DepositCall__Inputs(this);
  }

  get outputs(): DepositCall__Outputs {
    return new DepositCall__Outputs(this);
  }
}

export class DepositCall__Inputs {
  _call: DepositCall;

  constructor(call: DepositCall) {
    this._call = call;
  }

  get amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get onBehalfOf(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get referralCode(): i32 {
    return this._call.inputValues[2].value.toI32();
  }
}

export class DepositCall__Outputs {
  _call: DepositCall;

  constructor(call: DepositCall) {
    this._call = call;
  }
}

export class IncreaseAllowanceCall extends ethereum.Call {
  get inputs(): IncreaseAllowanceCall__Inputs {
    return new IncreaseAllowanceCall__Inputs(this);
  }

  get outputs(): IncreaseAllowanceCall__Outputs {
    return new IncreaseAllowanceCall__Outputs(this);
  }
}

export class IncreaseAllowanceCall__Inputs {
  _call: IncreaseAllowanceCall;

  constructor(call: IncreaseAllowanceCall) {
    this._call = call;
  }

  get spender(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get addedValue(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class IncreaseAllowanceCall__Outputs {
  _call: IncreaseAllowanceCall;

  constructor(call: IncreaseAllowanceCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class InitializeCall extends ethereum.Call {
  get inputs(): InitializeCall__Inputs {
    return new InitializeCall__Inputs(this);
  }

  get outputs(): InitializeCall__Outputs {
    return new InitializeCall__Outputs(this);
  }
}

export class InitializeCall__Inputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }

  get aclManager(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get treasury(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get underlyingAsset(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get interestRateAddress(): Address {
    return this._call.inputValues[3].value.toAddress();
  }

  get debtTokenAddress(): Address {
    return this._call.inputValues[4].value.toAddress();
  }

  get tokenDecimals(): i32 {
    return this._call.inputValues[5].value.toI32();
  }

  get tokenName(): string {
    return this._call.inputValues[6].value.toString();
  }

  get tokenSymbol(): string {
    return this._call.inputValues[7].value.toString();
  }
}

export class InitializeCall__Outputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class RepayOnBelhalfCall extends ethereum.Call {
  get inputs(): RepayOnBelhalfCall__Inputs {
    return new RepayOnBelhalfCall__Inputs(this);
  }

  get outputs(): RepayOnBelhalfCall__Outputs {
    return new RepayOnBelhalfCall__Outputs(this);
  }
}

export class RepayOnBelhalfCall__Inputs {
  _call: RepayOnBelhalfCall;

  constructor(call: RepayOnBelhalfCall) {
    this._call = call;
  }

  get loanId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get from(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get onBehalfOf(): Address {
    return this._call.inputValues[3].value.toAddress();
  }
}

export class RepayOnBelhalfCall__Outputs {
  _call: RepayOnBelhalfCall;

  constructor(call: RepayOnBelhalfCall) {
    this._call = call;
  }
}

export class SetActiveCall extends ethereum.Call {
  get inputs(): SetActiveCall__Inputs {
    return new SetActiveCall__Inputs(this);
  }

  get outputs(): SetActiveCall__Outputs {
    return new SetActiveCall__Outputs(this);
  }
}

export class SetActiveCall__Inputs {
  _call: SetActiveCall;

  constructor(call: SetActiveCall) {
    this._call = call;
  }

  get active(): boolean {
    return this._call.inputValues[0].value.toBoolean();
  }
}

export class SetActiveCall__Outputs {
  _call: SetActiveCall;

  constructor(call: SetActiveCall) {
    this._call = call;
  }
}

export class SetFrozenCall extends ethereum.Call {
  get inputs(): SetFrozenCall__Inputs {
    return new SetFrozenCall__Inputs(this);
  }

  get outputs(): SetFrozenCall__Outputs {
    return new SetFrozenCall__Outputs(this);
  }
}

export class SetFrozenCall__Inputs {
  _call: SetFrozenCall;

  constructor(call: SetFrozenCall) {
    this._call = call;
  }

  get frozen(): boolean {
    return this._call.inputValues[0].value.toBoolean();
  }
}

export class SetFrozenCall__Outputs {
  _call: SetFrozenCall;

  constructor(call: SetFrozenCall) {
    this._call = call;
  }
}

export class SetTreasuryCall extends ethereum.Call {
  get inputs(): SetTreasuryCall__Inputs {
    return new SetTreasuryCall__Inputs(this);
  }

  get outputs(): SetTreasuryCall__Outputs {
    return new SetTreasuryCall__Outputs(this);
  }
}

export class SetTreasuryCall__Inputs {
  _call: SetTreasuryCall;

  constructor(call: SetTreasuryCall) {
    this._call = call;
  }

  get treasury(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetTreasuryCall__Outputs {
  _call: SetTreasuryCall;

  constructor(call: SetTreasuryCall) {
    this._call = call;
  }
}

export class SetTreasuryAddressCall extends ethereum.Call {
  get inputs(): SetTreasuryAddressCall__Inputs {
    return new SetTreasuryAddressCall__Inputs(this);
  }

  get outputs(): SetTreasuryAddressCall__Outputs {
    return new SetTreasuryAddressCall__Outputs(this);
  }
}

export class SetTreasuryAddressCall__Inputs {
  _call: SetTreasuryAddressCall;

  constructor(call: SetTreasuryAddressCall) {
    this._call = call;
  }

  get treasury(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetTreasuryAddressCall__Outputs {
  _call: SetTreasuryAddressCall;

  constructor(call: SetTreasuryAddressCall) {
    this._call = call;
  }
}

export class TransferCall extends ethereum.Call {
  get inputs(): TransferCall__Inputs {
    return new TransferCall__Inputs(this);
  }

  get outputs(): TransferCall__Outputs {
    return new TransferCall__Outputs(this);
  }
}

export class TransferCall__Inputs {
  _call: TransferCall;

  constructor(call: TransferCall) {
    this._call = call;
  }

  get to(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class TransferCall__Outputs {
  _call: TransferCall;

  constructor(call: TransferCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class TransferFromCall extends ethereum.Call {
  get inputs(): TransferFromCall__Inputs {
    return new TransferFromCall__Inputs(this);
  }

  get outputs(): TransferFromCall__Outputs {
    return new TransferFromCall__Outputs(this);
  }
}

export class TransferFromCall__Inputs {
  _call: TransferFromCall;

  constructor(call: TransferFromCall) {
    this._call = call;
  }

  get from(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get to(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class TransferFromCall__Outputs {
  _call: TransferFromCall;

  constructor(call: TransferFromCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class UpdateStateReserveCall extends ethereum.Call {
  get inputs(): UpdateStateReserveCall__Inputs {
    return new UpdateStateReserveCall__Inputs(this);
  }

  get outputs(): UpdateStateReserveCall__Outputs {
    return new UpdateStateReserveCall__Outputs(this);
  }
}

export class UpdateStateReserveCall__Inputs {
  _call: UpdateStateReserveCall;

  constructor(call: UpdateStateReserveCall) {
    this._call = call;
  }
}

export class UpdateStateReserveCall__Outputs {
  _call: UpdateStateReserveCall;

  constructor(call: UpdateStateReserveCall) {
    this._call = call;
  }
}

export class WithdrawCall extends ethereum.Call {
  get inputs(): WithdrawCall__Inputs {
    return new WithdrawCall__Inputs(this);
  }

  get outputs(): WithdrawCall__Outputs {
    return new WithdrawCall__Outputs(this);
  }
}

export class WithdrawCall__Inputs {
  _call: WithdrawCall;

  constructor(call: WithdrawCall) {
    this._call = call;
  }

  get amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get to(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class WithdrawCall__Outputs {
  _call: WithdrawCall;

  constructor(call: WithdrawCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}
