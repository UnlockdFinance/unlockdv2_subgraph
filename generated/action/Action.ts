// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class Borrow extends ethereum.Event {
  get params(): Borrow__Params {
    return new Borrow__Params(this);
  }
}

export class Borrow__Params {
  _event: Borrow;

  constructor(event: Borrow) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get loanId(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get totalAssets(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get token(): Address {
    return this._event.parameters[4].value.toAddress();
  }
}

export class Genesis extends ethereum.Event {
  get params(): Genesis__Params {
    return new Genesis__Params(this);
  }
}

export class Genesis__Params {
  _event: Genesis;

  constructor(event: Genesis) {
    this._event = event;
  }
}

export class InstallerInstallModule extends ethereum.Event {
  get params(): InstallerInstallModule__Params {
    return new InstallerInstallModule__Params(this);
  }
}

export class InstallerInstallModule__Params {
  _event: InstallerInstallModule;

  constructor(event: InstallerInstallModule) {
    this._event = event;
  }

  get moduleId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get moduleImpl(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get moduleVersion(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }
}

export class LoanCreated extends ethereum.Event {
  get params(): LoanCreated__Params {
    return new LoanCreated__Params(this);
  }
}

export class LoanCreated__Params {
  _event: LoanCreated;

  constructor(event: LoanCreated) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get loanId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get totalAssets(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get amount(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get borrowIndex(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class ProxyCreated extends ethereum.Event {
  get params(): ProxyCreated__Params {
    return new ProxyCreated__Params(this);
  }
}

export class ProxyCreated__Params {
  _event: ProxyCreated;

  constructor(event: ProxyCreated) {
    this._event = event;
  }

  get proxy(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get moduleId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class Repay extends ethereum.Event {
  get params(): Repay__Params {
    return new Repay__Params(this);
  }
}

export class Repay__Params {
  _event: Repay;

  constructor(event: Repay) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get loanId(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get unlockedAssets(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class Action__calculateDigestInputSignActionStruct extends ethereum.Tuple {
  get loan(): Action__calculateDigestInputSignActionLoanStruct {
    return changetype<Action__calculateDigestInputSignActionLoanStruct>(
      this[0].toTuple()
    );
  }

  get assets(): Array<Bytes> {
    return this[1].toBytesArray();
  }

  get nonce(): BigInt {
    return this[2].toBigInt();
  }

  get deadline(): BigInt {
    return this[3].toBigInt();
  }
}

export class Action__calculateDigestInputSignActionLoanStruct extends ethereum.Tuple {
  get loanId(): Bytes {
    return this[0].toBytes();
  }

  get aggLoanPrice(): BigInt {
    return this[1].toBigInt();
  }

  get aggLtv(): BigInt {
    return this[2].toBigInt();
  }

  get aggLiquidationThreshold(): BigInt {
    return this[3].toBigInt();
  }

  get totalAssets(): BigInt {
    return this[4].toBigInt();
  }

  get nonce(): BigInt {
    return this[5].toBigInt();
  }

  get deadline(): BigInt {
    return this[6].toBigInt();
  }
}

export class Action__getLoanResultValue0Struct extends ethereum.Tuple {
  get loanId(): Bytes {
    return this[0].toBytes();
  }

  get state(): i32 {
    return this[1].toI32();
  }

  get uToken(): Address {
    return this[2].toAddress();
  }

  get underlyingAsset(): Address {
    return this[3].toAddress();
  }

  get owner(): Address {
    return this[4].toAddress();
  }

  get totalAssets(): BigInt {
    return this[5].toBigInt();
  }
}

export class Action extends ethereum.SmartContract {
  static bind(address: Address): Action {
    return new Action("Action", address);
  }

  DOMAIN_SEPARATOR(): Bytes {
    let result = super.call(
      "DOMAIN_SEPARATOR",
      "DOMAIN_SEPARATOR():(bytes32)",
      []
    );

    return result[0].toBytes();
  }

  try_DOMAIN_SEPARATOR(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "DOMAIN_SEPARATOR",
      "DOMAIN_SEPARATOR():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  calculateDigest(
    nonce: BigInt,
    signAction: Action__calculateDigestInputSignActionStruct
  ): Bytes {
    let result = super.call(
      "calculateDigest",
      "calculateDigest(uint256,((bytes32,uint256,uint256,uint256,uint256,uint256,uint256),bytes32[],uint256,uint256)):(bytes32)",
      [
        ethereum.Value.fromUnsignedBigInt(nonce),
        ethereum.Value.fromTuple(signAction)
      ]
    );

    return result[0].toBytes();
  }

  try_calculateDigest(
    nonce: BigInt,
    signAction: Action__calculateDigestInputSignActionStruct
  ): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "calculateDigest",
      "calculateDigest(uint256,((bytes32,uint256,uint256,uint256,uint256,uint256,uint256),bytes32[],uint256,uint256)):(bytes32)",
      [
        ethereum.Value.fromUnsignedBigInt(nonce),
        ethereum.Value.fromTuple(signAction)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  getLoan(loanId: Bytes): Action__getLoanResultValue0Struct {
    let result = super.call(
      "getLoan",
      "getLoan(bytes32):((bytes32,uint8,address,address,address,uint256))",
      [ethereum.Value.fromFixedBytes(loanId)]
    );

    return changetype<Action__getLoanResultValue0Struct>(result[0].toTuple());
  }

  try_getLoan(
    loanId: Bytes
  ): ethereum.CallResult<Action__getLoanResultValue0Struct> {
    let result = super.tryCall(
      "getLoan",
      "getLoan(bytes32):((bytes32,uint8,address,address,address,uint256))",
      [ethereum.Value.fromFixedBytes(loanId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<Action__getLoanResultValue0Struct>(value[0].toTuple())
    );
  }

  getNonce(sender: Address): BigInt {
    let result = super.call("getNonce", "getNonce(address):(uint256)", [
      ethereum.Value.fromAddress(sender)
    ]);

    return result[0].toBigInt();
  }

  try_getNonce(sender: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall("getNonce", "getNonce(address):(uint256)", [
      ethereum.Value.fromAddress(sender)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  moduleId(): BigInt {
    let result = super.call("moduleId", "moduleId():(uint256)", []);

    return result[0].toBigInt();
  }

  try_moduleId(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("moduleId", "moduleId():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  moduleVersion(): Bytes {
    let result = super.call("moduleVersion", "moduleVersion():(bytes32)", []);

    return result[0].toBytes();
  }

  try_moduleVersion(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "moduleVersion",
      "moduleVersion():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get moduleId_(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get moduleVersion_(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class BorrowCall extends ethereum.Call {
  get inputs(): BorrowCall__Inputs {
    return new BorrowCall__Inputs(this);
  }

  get outputs(): BorrowCall__Outputs {
    return new BorrowCall__Outputs(this);
  }
}

export class BorrowCall__Inputs {
  _call: BorrowCall;

  constructor(call: BorrowCall) {
    this._call = call;
  }

  get uToken(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get assets(): Array<BorrowCallAssetsStruct> {
    return this._call.inputValues[2].value.toTupleArray<
      BorrowCallAssetsStruct
    >();
  }

  get signAction(): BorrowCallSignActionStruct {
    return changetype<BorrowCallSignActionStruct>(
      this._call.inputValues[3].value.toTuple()
    );
  }

  get sig(): BorrowCallSigStruct {
    return changetype<BorrowCallSigStruct>(
      this._call.inputValues[4].value.toTuple()
    );
  }
}

export class BorrowCall__Outputs {
  _call: BorrowCall;

  constructor(call: BorrowCall) {
    this._call = call;
  }
}

export class BorrowCallAssetsStruct extends ethereum.Tuple {
  get collection(): Address {
    return this[0].toAddress();
  }

  get tokenId(): BigInt {
    return this[1].toBigInt();
  }
}

export class BorrowCallSignActionStruct extends ethereum.Tuple {
  get loan(): BorrowCallSignActionLoanStruct {
    return changetype<BorrowCallSignActionLoanStruct>(this[0].toTuple());
  }

  get assets(): Array<Bytes> {
    return this[1].toBytesArray();
  }

  get nonce(): BigInt {
    return this[2].toBigInt();
  }

  get deadline(): BigInt {
    return this[3].toBigInt();
  }
}

export class BorrowCallSignActionLoanStruct extends ethereum.Tuple {
  get loanId(): Bytes {
    return this[0].toBytes();
  }

  get aggLoanPrice(): BigInt {
    return this[1].toBigInt();
  }

  get aggLtv(): BigInt {
    return this[2].toBigInt();
  }

  get aggLiquidationThreshold(): BigInt {
    return this[3].toBigInt();
  }

  get totalAssets(): BigInt {
    return this[4].toBigInt();
  }

  get nonce(): BigInt {
    return this[5].toBigInt();
  }

  get deadline(): BigInt {
    return this[6].toBigInt();
  }
}

export class BorrowCallSigStruct extends ethereum.Tuple {
  get v(): i32 {
    return this[0].toI32();
  }

  get r(): Bytes {
    return this[1].toBytes();
  }

  get s(): Bytes {
    return this[2].toBytes();
  }

  get deadline(): BigInt {
    return this[3].toBigInt();
  }
}

export class RepayCall extends ethereum.Call {
  get inputs(): RepayCall__Inputs {
    return new RepayCall__Inputs(this);
  }

  get outputs(): RepayCall__Outputs {
    return new RepayCall__Outputs(this);
  }
}

export class RepayCall__Inputs {
  _call: RepayCall;

  constructor(call: RepayCall) {
    this._call = call;
  }

  get amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get signAction(): RepayCallSignActionStruct {
    return changetype<RepayCallSignActionStruct>(
      this._call.inputValues[1].value.toTuple()
    );
  }

  get sig(): RepayCallSigStruct {
    return changetype<RepayCallSigStruct>(
      this._call.inputValues[2].value.toTuple()
    );
  }
}

export class RepayCall__Outputs {
  _call: RepayCall;

  constructor(call: RepayCall) {
    this._call = call;
  }
}

export class RepayCallSignActionStruct extends ethereum.Tuple {
  get loan(): RepayCallSignActionLoanStruct {
    return changetype<RepayCallSignActionLoanStruct>(this[0].toTuple());
  }

  get assets(): Array<Bytes> {
    return this[1].toBytesArray();
  }

  get nonce(): BigInt {
    return this[2].toBigInt();
  }

  get deadline(): BigInt {
    return this[3].toBigInt();
  }
}

export class RepayCallSignActionLoanStruct extends ethereum.Tuple {
  get loanId(): Bytes {
    return this[0].toBytes();
  }

  get aggLoanPrice(): BigInt {
    return this[1].toBigInt();
  }

  get aggLtv(): BigInt {
    return this[2].toBigInt();
  }

  get aggLiquidationThreshold(): BigInt {
    return this[3].toBigInt();
  }

  get totalAssets(): BigInt {
    return this[4].toBigInt();
  }

  get nonce(): BigInt {
    return this[5].toBigInt();
  }

  get deadline(): BigInt {
    return this[6].toBigInt();
  }
}

export class RepayCallSigStruct extends ethereum.Tuple {
  get v(): i32 {
    return this[0].toI32();
  }

  get r(): Bytes {
    return this[1].toBytes();
  }

  get s(): Bytes {
    return this[2].toBytes();
  }

  get deadline(): BigInt {
    return this[3].toBigInt();
  }
}
